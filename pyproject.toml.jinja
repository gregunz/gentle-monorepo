[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{monorepo_name}}"
version = "0.0.1"
description = "A python monorepo using polylith and uv."
readme = "README.md"
requires-python = "{{python_version}}"
dependencies = [
    "fastapi",
    "uvicorn",
]

[dependency-groups]
dev = [
  "mypy",
  "polylith-cli",
  "pytest",
  "ruff",
  "jupyter",
  "poethepoet",
]

[tool.uv.workspace]
members = ["projects/*"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
dev-mode-dirs = ["components", "bases", "development", "."]

[tool.polylith.bricks]
"bases/{{monorepo_name}}/hello_api" = "{{monorepo_name}}/hello_api"
"components/{{monorepo_name}}/greeting" = "{{monorepo_name}}/greeting"
"components/{{monorepo_name}}/log" = "{{monorepo_name}}/log"

[tool.ruff]
exclude = [
  ".git",
  ".github",
  "__pycache__",
  ".mypy_cache",
  ".ruff_cache",
  "dist",
  ".venv",
  "./development/*.py",
]
line-length = 120

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]

[tool.mypy]
mypy_path = ["components", "bases"]
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "functions_framework"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "confluent_kafka"
ignore_missing_imports = true

[tool.poe]
executor.type = "uv"

[tool.poe.tasks]
setup  = "pre-commit install --config .pre-commit-config.yaml"
format = "pre-commit run --all-files"

[tool.poe.tasks.test]
env = {PYTEST_ARGS.default = ""}
cmd = "pytest $PYTEST_ARGS"
